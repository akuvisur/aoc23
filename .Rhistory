input
class(input)
input <- c(input)
input
which(input = "")
?which
input = ""
file <- "input_data/input13test1.txt"
input <- readLines(file)
input == ""
which(input == "")
first <- input[1:which(input == "")]
second <- input[which(input == "")+1,length(input)]
second <- input[which(input == "")+1:length(input)]
second
input
second <- input[which(input == "")+1:length(input)-which(input=="")]
second
length(second)
second <- input[which(input == "")+1:length(input)]
second
input[8:15]
second <- input[(which(input == "")+1):length(input)]
second
first
input2 <- input %>% sapply(strsplit, NULL) %>% unlist() %>% matrix(ncol=length(readLines(file))) %>% t()
input %>% sapply(strsplit, NULL) %>% unlist()
input
first
first %>% sapply(strsplit, NULL) %>% unlist() %>% matrix(ncol=length(first))
first %>% sapply(strsplit, NULL) %>% unlist() %>% matrix(ncol=length(first)) %>% t()
first %>% sapply(strsplit, NULL) %>% unlist() %>% matrix(ncol=length(first))
first %>% sapply(strsplit, NULL) %>% unlist() %>% matrix(ncol=nchar(first[1]))
first
first %>% sapply(strsplit, NULL) %>% unlist()
nchar(first[1]
)
first %>% sapply(strsplit, NULL) %>% unlist() %>% matrix(ncol=nchar(first[1]))
first %>% sapply(strsplit, NULL) %>% unlist() %>% matrix(nrow=nchar(first[1])) %>% t()
f < first %>% sapply(strsplit, NULL) %>% unlist() %>% matrix(nrow=nchar(first[1])) %>% t()
f < first %>% sapply(strsplit, NULL) %>% unlist() %>% matrix(nrow=nchar(first[1])) %>% t()
f <- first %>% sapply(strsplit, NULL) %>% unlist() %>% matrix(nrow=nchar(first[1])) %>% t()
f
rev(f)
rev(f) %>% t()
f == f
antidiag <- function(x, offset = 0L) {
x[col(x) + row(x) - ncol(x) - 1L == offest]
}
f
antidiag(f)
?offest
antidiag <- function(x, offset = 0L) {
x[col(x) + row(x) - ncol(x) - 1L == offset]
}
antidiag(f)
f
x <- matrix(1:30,nrow=5)
f
x
f[,ncol(f):1]
length(f[,1])
length(f[1,])
r <- 5
max_to_consider <- min(length(f[1,])-r,r)
max_to_consider <- min(length(f[1,])-r,r)
r <- 3
r <- 5
max_to_consider <- min(length(f[1,])-r,r)
start <- max(1,r-max_to_consider)
end <- min(length(f[1,]),r+max_to_consider)
start
end
max_to_consider <- min(length(f[1,])-r,r)
start <- max(1,r-max_to_consider-1)
end <- min(length(f[1,]),r+max_to_consider)
start
end
r
max_to_consider
r <- 3
max_to_consider <- min(length(f[1,])-r,r)
start <- max(1,r-max_to_consider+1)
end <- min(length(f[1,]),r+max_to_consider)
start
end
r <- 2
max_to_consider <- min(length(f[1,])-r,r)
start <- max(1,r-max_to_consider+1)
end <- min(length(f[1,]),r+max_to_consider)
start
end
r <- 8
max_to_consider <- min(length(f[1,])-r,r)
start <- max(1,r-max_to_consider+1)
end <- min(length(f[1,]),r+max_to_consider)
start
end
r <- 7
max_to_consider <- min(length(f[1,])-r,r)
start <- max(1,r-max_to_consider+1)
end <- min(length(f[1,]),r+max_to_consider)
start
end
r <- 6
max_to_consider <- min(length(f[1,])-r,r)
start <- max(1,r-max_to_consider+1)
end <- min(length(f[1,]),r+max_to_consider)
start
end
f[start:end]
f
f[,start:end]
start
end
f[,4:9]
f[,start:(r+1)] == rev[,r:end]
rev <- f[,ncol(f):1]
rev
rev <- f[,r:end]
ref
rev
rev <- rev[,ncol(rev):1]
rev
rev_r <- length(f[1,]-r-max_to_consider)
r
max_to_consider
length(f[1,])
rev_r <- length(f[1,]-r-max_to_consider)
rev_r <- length(f[1,])-r-max_to_consider
rev_r
r
max_to_consider
r <- 5
max_to_consider <- min(length(f[1,])-r,r)
start <- max(1,r-max_to_consider+1)
end <- min(length(f[1,]),r+max_to_consider)
rev <- f[,ncol(f):1]
rev_r <- length(f[1,])-r-max_to_consider
rev_r
length([1,])
length(f[1,])
r
max_to_consider
left_side <- f[,start:(r+1)]
left_side <- f[,start:(r+1)]
right_side <- f[,r:end]
left_side
right_sid
right_side
left_side <- f[,start:(r+1)]
right_side <- f[,r:end]
right_side_rev <- right_side[,ncol(right_side):1]
right_side_rev
left_side
right_side
right_side_rev
rownum <- 0
for (r in 2:(ncol(f)-1)) {
if (rownum > 0) break
max_to_consider <- min(length(f[1,])-r,r)
start <- max(1,r-max_to_consider+1)
end <- min(length(f[1,]),r+max_to_consider)
left_side <- f[,start:(r+1)]
right_side <- f[,r:end]
right_side_rev <- right_side[,ncol(right_side):1]
if (all(left_side == right_side_rev)) {
rownum <- r
}
}
rownum
r <- 4
nrow(f)
f <- second %>% sapply(strsplit, NULL) %>% unlist() %>% matrix(nrow=nchar(first[1])) %>% t()
f
r <- 1
r <- 2
max_to_consider <- min(length(f[,1])-r,r)
start <- max(1,r-max_to_consider+1)
end <- min(length(f[,1]),r+max_to_consider)
max_to_consider
start
end
top_side <- f[start:(r+1),]
bottom_side <- f[r:end,]
bottom_side_rev <- right_side[,nrow(right_side):1]
top_side
bottom_side_rev <- right_side[nrow(right_side):1,]
bottom_side
end
bottom_side <- f[r:end,]
r
top_side <- f[start:(r+1),]
top_side
top_side <- f[start:(r),]
bottom_side <- f[(r+1):end,]
max_to_consider
top_side
bottom_side
colnum <- 0
for (r in 1:(nrow(f)-1)) {
if (colnum > 0) break
max_to_consider <- min(length(f[,1])-r,r)
start <- max(1,r-max_to_consider+1)
end <- min(length(f[,1]),r+max_to_consider)
top_side <- f[start:(r),]
bottom_side <- f[(r+1):end,]
bottom_side_rev <- right_side[nrow(right_side):1,]
if (all(top_side == bottom_side_rev)) {
colnum <- r
}
}
top_side
bottom_side_rev
colnum <- 0
for (r in 1:(nrow(f)-1)) {
if (colnum > 0) break
max_to_consider <- min(length(f[,1])-r,r)
start <- max(1,r-max_to_consider+1)
end <- min(length(f[,1]),r+max_to_consider)
top_side <- f[start:(r),]
bottom_side <- f[(r+1):end,]
bottom_side_rev <- bottom_side[nrow(bottom_side):1,]
if (all(top_side == bottom_side_rev)) {
colnum <- r
}
}
nrow(bottom_side)
bottom_side
r
max_to_consider <- min(length(f[,1])-r,r)
start <- max(1,r-max_to_consider+1)
end <- min(length(f[,1]),r+max_to_consider)
top_side <- f[start:(r),]
bottom_side <- f[(r+1):end,]
top_side
bottom_side
bottom_side_rev <- bottom_side[nrow(bottom_side):1,]
colnum <- 0
for (r in 2:(nrow(f)-1)) {
if (colnum > 0) break
max_to_consider <- min(length(f[,1])-r,r)
start <- max(1,r-max_to_consider+1)
end <- min(length(f[,1]),r+max_to_consider)
top_side <- f[start:(r),]
bottom_side <- f[(r+1):end,]
bottom_side_rev <- bottom_side[nrow(bottom_side):1,]
if (all(top_side == bottom_side_rev)) {
colnum <- r
}
}
colnum
rownum
file <- "input_data/input13.txt"
input <- readLines(file)
which(input=="")
file <- "input_data/input13.txt"
input <- readLines(file)
first <- input[1:(which(input == "")-1)]
second <- input[(which(input == "")+1):length(input)]
input
stsplit(input, " ")
strsplit(input, "")
strsplit(input, " ")
head(input)
head(input,.10)
head(input,.1)
head(input,1.)
head(input,10.)
head(input,14.)
head(input,15.)
strsplit(input,NULL)[1]
strsplit(input,NULL)[2]
strsplit(input,"")[2]
strsplit(input," ")[2]
strsplit(input," ")[1]
nzchar(input)
seq_along(nzchar(input))
seq_along(nzchar(input)==TRUE)
which(nzchar(input)==TRUE)
which(nzchar(input))
which(nzchar(input),arr.ind = TRUE)
nzchar(input) == TRUE
nzchar(input)
which(nzchar(input) == FALSE)
for (i in which(nzchar(input) == FALSE)) {
print(i)
}
iter <- which(nzchar(input) == FALSE)
seq_along(iter)
nrow(input)
length(input)
input[2,5]
input[2:5]
iter <- which(nzchar(input) == FALSE)
i <- 1
if (i == 1) start <- 1
else start <- iter[i]
if (i == length(input)) end <- length(input)
else end <- iter[i]
if (i == 1) start <- 1
else start <- iter[i]
start
end
grid <- input[start:end]
iter
end
length(input)
if (i == 1) start <- 1
else start <- iter[i]
if (i == 1) start <- 1
else start <- iter[i]
for (i in seq_along(iter)) {
if (i == 1) start <- 1
else start <- iter[i]
if (i == length(input)) end <- length(input)
else end <- iter[i+1]
grid <- input[start:end]
}
start
end
i == length(input)
for (i in seq_along(iter)) {
if (i == 1) start <- 1
else start <- iter[i]
if (i == max(iter)) end <- length(input)
else end <- iter[i+1]
grid <- input[start:end]
}
start
end
i
length(iter)
for (i in seq_along(iter)) {
if (i == 1) start <- 1
else start <- iter[i]
if (i == length(iter)) end <- length(input)
else end <- iter[i+1]
grid <- input[start:end]
}
grid
for (i in seq_along(iter)) {
if (i == 1) start <- 1
else start <- iter[i]
if (i == length(iter)) end <- length(input)
else end <- iter[i+1]
grid <- input[(start+1):end]
}
grid
r <- getRowCount(grid)
c <- getColCount(grid)
getRowCount <- function(f) {
rownum <- 0
for (r in 2:(ncol(f)-1)) {
if (rownum > 0) break
max_to_consider <- min(length(f[1,])-r,r)
start <- max(1,r-max_to_consider+1)
end <- min(length(f[1,]),r+max_to_consider)
left_side <- f[,start:(r+1)]
right_side <- f[,r:end]
right_side_rev <- right_side[,ncol(right_side):1]
if (all(left_side == right_side_rev)) {
rownum <- r
return(rownum)
}
}
}
getColCount <- function(f) {
colnum <- 0
for (r in 2:(nrow(f)-1)) {
if (colnum > 0) break
max_to_consider <- min(length(f[,1])-r,r)
start <- max(1,r-max_to_consider+1)
end <- min(length(f[,1]),r+max_to_consider)
top_side <- f[start:(r),]
bottom_side <- f[(r+1):end,]
bottom_side_rev <- bottom_side[nrow(bottom_side):1,]
if (all(top_side == bottom_side_rev)) {
colnum <- r
return(colnum)
}
}
}
r <- getRowCount(grid)
c <- getColCount(grid)
grid
grid <- input[(start+1):end] %>% sapply(strsplit, NULL) %>% unlist() %>% matrix(nrow=nchar(first[1])) %>% t()
grid <- input[(start+1):end] %>% sapply(strsplit, NULL) %>% unlist() %>% matrix(nrow=nchar(grid[1])) %>% t()
grid
grid <- input[(start+1):end]
grid
nchar(grid[1])
grid <- input[(start+1):end] %>% matrix(nrow=nchar(grid[1])) %>% t()
grid
r <- getRowCount(grid)
c <- getColCount(grid)
ncol(grid)
nrow(grid)
f <- first %>% sapply(strsplit, NULL) %>% unlist() %>% matrix(nrow=nchar(first[1])) %>% t()
f
class(f)
class(grid)
r <- getRowCount(grid)
f <- grid
rownum <- 0
for (r in 2:(ncol(f)-1)) {
if (rownum > 0) break
max_to_consider <- min(length(f[1,])-r,r)
start <- max(1,r-max_to_consider+1)
end <- min(length(f[1,]),r+max_to_consider)
left_side <- f[,start:(r+1)]
right_side <- f[,r:end]
right_side_rev <- right_side[,ncol(right_side):1]
if (all(left_side == right_side_rev)) {
rownum <- r
return(rownum)
}
}
r
start
end
left_side <- f[,start:(r+1)]
right_side <- f[,r:end]
right_side_rev <- right_side[,ncol(right_side):1]
ncol(right_side)
right_side
f
class(f)
ncol(f)
ncol(right_side)
length(f)
f
end
right_side
if (rownum > 0) break
max_to_consider <- min(length(f[1,])-r,r)
start <- max(1,r-max_to_consider+1)
end <- min(length(f[1,]),r+max_to_consider)
left_side <- f[,start:(r+1)]
right_side <- f[,r:end]
#right_side_rev <- right_side[,ncol(right_side):1]
right_side_rev <- right_side[,length(right_side):1]
right_side
f
f[,3:4]
class(f[,3:4])
right_side <- matrix(f[,r:end])
right_side
left_side
class(left_side)
left_side <- matrix(f[,start:(r+1)])
right_side <- matrix(f[,r:end])
right_side_rev <- right_side[,ncol(right_side):1]
left_side
right_side
right_side_rev
left_side <- matrix(f[,start:(r+1)])
right_side <- matrix(f[,r:end])
right_side_rev <- matrix(right_side[,ncol(right_side):1])
left_side
grid
class(grid)
grid <- input[(start+1):end] %>% unlist() %>% matrix(nrow=nchar(grid[1])) %>% t()
input[(start+1):end] %>% unlist()
start
end
if (i == 1) start <- 1
else start <- iter[i]
if (i == length(iter)) end <- length(input)
else end <- iter[i+1]
grid <- input[(start+1):end] %>% unlist() %>% matrix(nrow=nchar(grid[1])) %>% t()
start <- 1344
i <- 99
iter[i]
start <- iter[99]
start
end <- length(input)-1
end
grid <- input[(start+1):end] %>% unlist() %>% matrix(nrow=nchar(grid[1])) %>% t()
grid
input[(start+1):end]
grid <- input[(start+1):end] %>% unlist() %>% matrix(nrow=nchar(input[(start+1):end][1])) %>% t()
grid
input[(start+1):end]
input[(start+1):end] %>% unlist()
input[(start+1):end] %>% unlist() %>% matrix(nrow=nchar(input[(start+1):end][1]))
#grid <- input[(start+1):end] %>% unlist() %>% matrix(nrow=nchar(input[(start+1):end][1])) %>% t()
grid <- input[(start+1):end] %>% matrix(nrow=nchar(input[(start+1):end][1])) %>% t()
grid
first <- input[1:(which(input == "")-1)]
input
head(input)
f <- input[1:13,]
f <- input[1:13]
f
first <- f
f
first
f <- first %>% sapply(strsplit, NULL) %>% unlist() %>% matrix(nrow=nchar(first[1])) %>% t()
f
end
end <- 13
start <- 1
f <- input[(start):end]
f
f <- input[(start):end] %>% sapply(strsplit, NULL) %>% unlist() %>% matrix(nrow=nchar(first[1])) %>% t()
f
grid <- input[(start):end] %>% sapply(strsplit, NULL) %>% unlist() %>% matrix(nrow=nchar(first[1])) %>% t()
grid
r <- getRowCount(grid)
c <- getColCount(grid)
r
